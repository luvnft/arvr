const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/lottie.aXDALlIb.js","_astro/_commonjsHelpers.Cpj98o6Y.js","_astro/lottie_light.B_UoZgEC.js"])))=>i.map(i=>d[i]);
const w="modulepreload",v=function(d){return"/"+d},p={},h=function(s,l,u){let m=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),i=o?.nonce||o?.getAttribute("nonce");m=Promise.all(l.map(t=>{if(t=v(t),t in p)return;p[t]=!0;const e=t.endsWith(".css"),r=e?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${r}`))return;const n=document.createElement("link");if(n.rel=e?"stylesheet":w,e||(n.as="script",n.crossOrigin=""),n.href=t,i&&n.setAttribute("nonce",i),document.head.appendChild(n),e)return new Promise((a,c)=>{n.addEventListener("load",a),n.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${t}`)))})}))}return m.then(()=>s()).catch(o=>{const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=o,window.dispatchEvent(i),!i.defaultPrevented)throw o})};setTimeout(async()=>{const d={player:"light",loop:!0,autoplay:"visible",visibleThreshold:0},s=[...document.querySelectorAll("[data-lottie]")].map(t=>{try{return[t,{...d,...JSON.parse(t.getAttribute("data-lottie-data")||"")}]}catch{console.warn("Cannot parse lottie animation data",t)}}).filter(t=>!!t);if(s.length===0)return;const l=s.some(([,t])=>t.player==="full"),u=await h(l?()=>import("./lottie.aXDALlIb.js").then(t=>t.l):()=>import("./lottie_light.B_UoZgEC.js").then(t=>t.l),__vite__mapDeps([2,1])).then(t=>t.default).catch(t=>{console.warn("Cannot load lottie-web script",t)});if(!u)return;const m=new Map((await Promise.all([...new Set(s.map(([t,e])=>e.src))].map(async t=>{const e=await fetch(t).catch(()=>{});if(!e||e.status>=400){console.warn("Cannot load animation(%s)",t);return}const r=await e.json().catch(()=>{});if(!r){console.warn("Cannot load animation(%s)",t);return}return[t,r]}))).filter(t=>!!t)),o=s.map(([t,e])=>{const r=e.id||`A${Math.random().toFixed(6).substring(2)}`,n=m.get(e.src);let a;if(n){const{loop:c,autoplay:f}=e;a=u.loadAnimation({container:t,loop:c,autoplay:f==="visible"?!1:f,animationData:n,rendererSettings:{viewBoxOnly:!0}})}return Object.freeze({id:r,config:e,container:t,isLoaded:!!a,player:a})}),i=o.filter(t=>t.isLoaded&&t.config.autoplay==="visible");if(i.length>0){const t=i.reduce((r,n)=>Math.max(0,Math.min(n.config.visibleThreshold||0,r)),1),e=new IntersectionObserver(r=>{r.forEach(n=>{const a=o.find(c=>c.container===n.target);a&&a.isLoaded&&(n.isIntersecting&&n.intersectionRatio>=t?a.player.play():a.player.pause())})},{threshold:t});i.forEach(r=>{e.observe(r.container)})}window.lottie=u,window.astroLottie={getAllAnimations(){return o.slice()},getAnimation(t){if(typeof t=="string")return o.find(e=>e.id===t);if(typeof t=="object"){if("container"in t)return o.find(e=>e.container===t.container);if("elementId"in t)return o.find(e=>e.container.id===t.elementId)}throw new Error("Invalid LottieAnimation source: "+t)}},document.dispatchEvent(new CustomEvent("astro-lottie-loaded",{detail:window.astroLottie}))},0);
